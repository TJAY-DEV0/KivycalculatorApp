name: Android Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Buildozer and Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git openjdk-17-jdk python3-pip autoconf libtool pkg-config zlib1g-dev unzip
          pip install --upgrade pip --no-cache-dir
          pip install buildozer[github] cython --no-cache-dir
      
      - name: Configure buildozer.spec
        run: |
          # Patch p4a to the 'develop' branch for stability with recent buildozer versions
          sed -i 's/#p4a.branch = master/p4a.branch = develop/g' buildozer.spec
          sed -i 's/p4a.branch = main/p4a.branch = develop/g' buildozer.spec
          # Target a modern, stable Android API
          sed -i 's/#android.api = 33/android.api = 33/g' buildozer.spec
          # Set the build tools version explicitly to a stable, non-rc version
          sed -i 's/#android.build_tools_version =.*/android.build_tools_version = 34.0.0/g' buildozer.spec
          # Ensure license acceptance is enabled in the spec file
          sed -i 's/#android.accept_sdk_license = False/android.accept_sdk_license = True/g' buildozer.spec

      - name: Delete old buildozer cache
        run: rm -rf ./.buildozer
      
      - name: Manual Android SDK and NDK Setup
        run: |
          # Create SDK and NDK directories
          mkdir -p .buildozer/android/platform/android-sdk
          mkdir -p .buildozer/android/platform/android-ndk
          
          # Use buildozer to download the correct versions
          buildozer -v android update --no-build-deps --no-target-deps || true
          
          # Accept licenses explicitly using sdkmanager
          yes | .buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true
          
          # Install specific build tools and platforms
          .buildozer/android/platform/android-sdk/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0" "platform-tools" "platforms;android-33"
      
      - name: Build the APK
        run: buildozer -v android debug
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-app-apk
          path: bin/*.apk

### Why this approach works

*   **Explicit Control:** Instead of Buildozer handling everything automatically, this workflow manually manages the crucial and most failure-prone parts of the build process: the SDK setup and licensing.
*   **Forced Licensing:** The `yes | .../sdkmanager --licenses` command runs license acceptance in a non-interactive way, which is essential for CI environments. Adding `|| true` prevents workflow failure if `sdkmanager` exits with an error code, which can happen even after licenses are successfully accepted.
*   **Specific SDK Component Installation:** After accepting the licenses, the workflow uses `sdkmanager` to install the exact SDK components needed for the build, avoiding potential issues caused by using the latest unstable release candidate.
*   **Clean Cache:** Removing the `.buildozer` cache at the start of the build ensures a fresh, non-corrupted environment for each build.

#This workflow is more complex but more resistant to the common problems of automated Buildozer builds on CI platforms.
